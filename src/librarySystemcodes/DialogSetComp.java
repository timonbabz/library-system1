/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarySystemcodes;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TimonBabz
 */
public final class DialogSetComp extends javax.swing.JDialog {

    Connection con = null;
    Statement statement = null;
    
    public static String compNo = "", compname = "",compCon = "",compRepN = "",compRepNos = "";
    String[] columnNames = {"Code/ID", "Company", "Contacts", "Representative", "Rep's Contacts"};
    DefaultTableModel compModel = new DefaultTableModel();
    /**
     * Creates new form DialogSetComp
     * @param parent
     * @param modal
     */
    public DialogSetComp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        isSelectedGroup();
        displayCompanies();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupOp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCompany = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtCompId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCompname = new javax.swing.JTextField();
        txtContacts = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRepName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRepNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        groupUpdate = new javax.swing.JRadioButton();
        groupNew = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Library Management System");

        jPanel1.setBackground(new java.awt.Color(129, 186, 243));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Bookscolor.png"))); // NOI18N
        jLabel1.setText("Add Companies to whom books will be issued for maintenance");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(473, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        tableCompany.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableCompany);

        jLabel2.setText("Company ID/Code :");

        jLabel3.setText("Company name :");

        txtContacts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactsKeyTyped(evt);
            }
        });

        jLabel4.setText("Contacts :");

        jLabel5.setText("Representative name :");

        txtRepNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRepNoKeyTyped(evt);
            }
        });

        jLabel6.setText("Representative contacts :");

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save_16.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnSave.setContentAreaFilled(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(129, 186, 243));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Select operation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        groupUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnGroupOp.add(groupUpdate);
        groupUpdate.setText("Update Exisiting record");
        groupUpdate.setContentAreaFilled(false);
        groupUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        groupUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupUpdateActionPerformed(evt);
            }
        });

        groupNew.setBackground(new java.awt.Color(255, 255, 255));
        btnGroupOp.add(groupNew);
        groupNew.setSelected(true);
        groupNew.setText("Add New Record");
        groupNew.setContentAreaFilled(false);
        groupNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        groupNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(groupNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(groupUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(groupNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(groupUpdate)
                .addContainerGap())
        );

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Editwhite_16.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Cancelblack_16.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnClear.setContentAreaFilled(false);
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search_16.png"))); // NOI18N
        btnSearch.setText("Find");
        btnSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnSearch.setContentAreaFilled(false);
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Searchwhite_16.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRepName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContacts, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCompname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCompId, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(4, 4, 4))
                            .addComponent(txtRepNo)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCompId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCompname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContacts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRepNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(106, 106, 106))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCompId.setText("");
        txtCompname.setText("");
        txtContacts.setText("");
        txtRepName.setText("");
        txtRepNo.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void groupNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupNewActionPerformed
        if(groupNew.isSelected()){
            btnSearch.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnSave.setEnabled(true);
            txtCompname.setEnabled(true);
            txtContacts.setEnabled(true);
            txtRepName.setEnabled(true);
            txtRepNo.setEnabled(true);}
    }//GEN-LAST:event_groupNewActionPerformed

    private void groupUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupUpdateActionPerformed
        if(groupUpdate.isSelected()){
            btnSearch.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnSave.setEnabled(false);
            txtCompname.setEnabled(false);
            txtContacts.setEnabled(false);
            txtRepName.setEnabled(false);
            txtRepNo.setEnabled(false);}
    }//GEN-LAST:event_groupUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(txtCompId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter company id");
            txtCompId.requestFocus();}
        else if(txtCompname.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter company name");
            txtCompname.requestFocus();}
        else if(txtContacts.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "enter company contacts");
            txtContacts.requestFocus();}
        else if(txtRepName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter representative's name");
            txtRepName.requestFocus();}
        else if(txtRepNo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter representative's contacts");
            txtRepNo.requestFocus();}
        else{addCompany();
        refreshListOnTitle();}
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(txtCompId.getText().isEmpty()){
            
            
            JOptionPane.showMessageDialog(null, "Enter company id");
            txtCompId.requestFocus();}
        else{CheckCompExists();}
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       int identered = Integer.parseInt(txtCompId.getText().trim());
        if(!txtCompname.isEnabled()){
           JOptionPane.showMessageDialog(null, "Enter a Company ID and click find to proceed");
        }else if(identered == 1){
        JOptionPane.showMessageDialog(null, "Default cannot be edited");
        txtCompId.setText("");
        txtCompname.setText("");
        txtContacts.setText("");
        txtRepName.setText("");
        txtRepNo.setText("");}
       else{
        CheckCompExistsUpdate();}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtContactsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactsKeyTyped
        char c = evt.getKeyChar();
        if ((c == java.awt.event.KeyEvent.VK_SPACE) || (c == 9 || c >= 58 && c <= 126 || c >= 33 && c <= 42 || c >= 44 && c <= 47)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtContactsKeyTyped

    private void txtRepNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRepNoKeyTyped
        char c = evt.getKeyChar();
        if ((c == java.awt.event.KeyEvent.VK_SPACE) || (c == 9 || c >= 58 && c <= 126 || c >= 33 && c <= 42 || c >= 44 && c <= 47)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtRepNoKeyTyped
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogSetComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogSetComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogSetComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogSetComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DialogSetComp dialog = new DialogSetComp(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    public void isSelectedGroup(){
        if(groupNew.isSelected()){
            btnSearch.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnSave.setEnabled(true);}
    }
    
    public void refreshListOnTitle(){
    while(compModel.getRowCount() != 0){
        compModel.removeRow(0);}
    displayCompanies();
}
    
    public void addCompany(){
        
                String compId = txtCompId.getText().trim();
                String compName = txtCompname.getText().trim();
                String compCont = txtContacts.getText().trim();
                String compRep = txtRepName.getText().toUpperCase().trim();
                String compRepNo = txtRepNo.getText().trim();
                    try {
                    Class.forName("com.mysql.jdbc.Driver");

                    con = DriverManager.getConnection("jdbc:mysql://localhost/libdb", "root", "libsystem@dmin");
                    statement = con.createStatement();

                    // SQL Insert
                    String sql = "INSERT INTO company_table " + "(comp_id,compName,contacts,rep_name,rep_cont)"
                            + "VALUES('"+ compId + "','"
                                        + compName + "','"
                                        + compCont + "','"
                                        + compRep + "','"
                                        + compRepNo + "') ";
                    
                    statement.execute(sql);

                    JOptionPane.showMessageDialog(null,  compName + "," + System.lineSeparator() + ""
                            + " Added successfully");

                    // Reset Text Fields
                    txtCompId.setText("");
                    txtCompname.setText("");
                    txtContacts.setText("");
                    txtRepName.setText("");
                    txtRepNo.setText("");
                    //status  = true;

                } catch (ClassNotFoundException | SQLException | HeadlessException es) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(null, "Unable to add");
                    JOptionPane.showMessageDialog(null, es.getMessage());
                }

                try {
                    if (statement != null) {
                        statement.close();
                        con.close();
                    }
                } catch (SQLException es) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(null, es.getMessage());
                }
    }
    
    public void displayCompanies() {

        compModel.setColumnIdentifiers(columnNames);

        tableCompany.setModel(compModel);

        tableCompany.setFillsViewportHeight(true);
        
        try {

            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/libdb", "root", "libsystem@dmin");
            PreparedStatement st = con.prepareStatement("SELECT comp_id,compName,contacts,rep_name,rep_cont FROM company_table");
            ResultSet rsIssue = st.executeQuery();

            int i = 0;
            while (rsIssue.next()) {
                compNo = rsIssue.getString("comp_id");
                compname = rsIssue.getString("compName");
                compCon = rsIssue.getString("contacts");
                compRepN = rsIssue.getString("rep_name");
                compRepNos = rsIssue.getString("rep_cont");

                compModel.addRow(new Object[]{compNo, compname,compCon,compRepN,compRepNos});
                i++;

            }

            if (i < 1) {
                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
         
        } catch (ClassNotFoundException | SQLException | HeadlessException rt) {
            // System.out.println(rt);
            JOptionPane.showMessageDialog(null, rt.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

}
    
    public void retrievecatDetails() {
    
            String catIdSe = txtCompId.getText().trim();
            try {
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/libdb?useSSL = false", "root", "libsystem@dmin");
            PreparedStatement st = con.prepareStatement("SELECT compName,contacts,rep_name,rep_cont FROM company_table WHERE (comp_id='"+ catIdSe +"')");
            ResultSet rs = st.executeQuery();
            boolean emptyRs = true;
            if (rs.next()) {
                emptyRs = false;
                String namecomp = rs.getString("compName");
                
                txtCompname.setText(namecomp);
                String contactComp = rs.getString("contacts");
                txtContacts.setText(contactComp);
                String repcompnAME = rs.getString("rep_name");
                txtRepName.setText(repcompnAME);
                String contactRep = rs.getString("rep_cont");
                txtRepNo.setText(contactRep);
                
            }
            if (emptyRs) {
                JOptionPane.showMessageDialog(null, "No Record");
                txtCompname.setEnabled(false);
                txtContacts.setEnabled(false);
                txtRepName.setEnabled(false);
                txtRepNo.setEnabled(false);
            }else{
            txtCompname.setEnabled(true);
            txtContacts.setEnabled(true);
            txtRepName.setEnabled(true);
            txtRepNo.setEnabled(true);}
            
        } catch (ClassNotFoundException | SQLException | HeadlessException rt) {
            // System.out.println(rt);
            //JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE); 
        }
        
    }
    
    public void updateCategory(){
        String compaId =txtCompId.getText();
        String namecomp= txtCompname.getText();
        String contactComp =txtContacts.getText();
        String repcompnAME = txtRepName.getText();
        String contactRep =txtRepNo.getText();
        
        if(txtCompId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter company id");
            txtCompId.requestFocus();}
        else if(txtCompname.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter company name");
            txtCompname.requestFocus();}
        else if(txtContacts.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(null, "enter company contacts");
            txtContacts.requestFocus();}
        else if(txtRepName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter representative's name");
            txtRepName.requestFocus();}
        else if(txtRepNo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter representative's contacts");
            txtRepNo.requestFocus();}
        else{
                try {
            String url = "jdbc:mysql://localhost/libdb?useSSL = false";
            Connection conn;
            conn = DriverManager.getConnection(url, "root", "libsystem@dmin");
            //compName,contacts,rep_name,rep_cont FROM company_table 
            //--------update users db-----------
            String sql = "UPDATE company_table SET compName='" + namecomp + "',contacts='" + contactComp + "',rep_name='" + repcompnAME + "'"
                    + ",rep_cont='" + contactRep + "'  WHERE comp_id=" + compaId;
            
            PreparedStatement pst;
            pst = null;
            pst = conn.prepareStatement(sql);
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Updated successfully");
            refreshListOnTitle();
            
                txtCompname.setText("");
                txtContacts.setText("");
                txtRepName.setText("");
                txtRepNo.setText("");
            
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

public void CheckCompExists(){
 
        String enteredUser = txtCompId.getText().trim();

        try
        {

            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/libdb?useSSL = false", "root", "libsystem@dmin");

            PreparedStatement st = connection.prepareStatement("SELECT* FROM company_table WHERE comp_id='" + enteredUser + "'");
            ResultSet r1=st.executeQuery();

             if(r1.next()) 
             {
               retrievecatDetails();
             }else{
                 JOptionPane.showMessageDialog(null, "Entered company ID does not exist");
                 txtCompId.requestFocus();}
         }

         catch (SQLException | ClassNotFoundException e) 
         {
            JOptionPane.showMessageDialog(null, e.getMessage());
         }

 }
    
public void CheckCompExistsUpdate(){
 
        String enteredUser = txtCompId.getText().trim();

        try
        {

            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/libdb?useSSL = false", "root", "libsystem@dmin");

            PreparedStatement st = connection.prepareStatement("SELECT* FROM company_table WHERE comp_id='" + enteredUser + "'");
            ResultSet r1=st.executeQuery();

             if(r1.next()) 
             {
               updateCategory();
             }else{
                 JOptionPane.showMessageDialog(null, "Entered company ID does not exist");
             txtCompId.requestFocus();}
         }

         catch (SQLException | ClassNotFoundException e) 
         {
            JOptionPane.showMessageDialog(null, e.getMessage());
         }

 }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.ButtonGroup btnGroupOp;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JRadioButton groupNew;
    private javax.swing.JRadioButton groupUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCompany;
    private javax.swing.JTextField txtCompId;
    private javax.swing.JTextField txtCompname;
    private javax.swing.JTextField txtContacts;
    private javax.swing.JTextField txtRepName;
    private javax.swing.JTextField txtRepNo;
    // End of variables declaration//GEN-END:variables
}
